type Achievement {
  id: Int!
  name: String!
  condition: String!
  achievers: [User]
  createdAt: String!
  updatedAt: String
}

type Category {
  id: Int!
  name: String!
  parent: [Category]
  child: [Category]
  createdAt: String!
  updatedAt: String
}

type Clap {
  id: Int!
  senderId: Int!
  sender: User!
  receiverId: Int!
  receiver: User!
  # post: Post!
  createdAt: String!
  updatedAt: String
}

type AddCommentResponse {
  ok: Boolean!
  error: String
}

type Mutation {
  AddComment(postId: Int!, parentCommentId: Int, body: String!): AddCommentResponse!
  AddPost(title: String!, body: String!): AddPostResponse!
  DeletePost(postId: Int!): DeletePostResponse!
  EditPost(postId: Int!, title: String, body: String): EditPostResponse!
  CompleteEmailVerification(key: String!): CompleteEmailVerificationResponse!
  CompletePhoneVerification(phoneNumber: String!, key: String!): CompletePhoneVerificationResponse!
  EmailSignIn(email: String!, password: String!): EmailSignInResponse!
  EmailSignUp(firstName: String!, lastName: String!, email: String, password: String!, profilePhoto: String!, age: Int!, phoneNumber: String!): EmailSignUpResponse!
  FacebookConnect(firstName: String!, lastName: String!, email: String, fbId: String!): FacebookConnectResponse!
  RequestEmailVerification: RequestEmailVerificationResponse!
  StartPhoneVerification(phoneNumber: String!): StartPhoneVerificationResponse!
  UpdateMyProfile(firstName: String, lastName: String, age: Int, gender: String, password: String, profilePhoto: String): UpdateMyProfileResponse!
}

type GetCommentsByPostIdResponse {
  ok: Boolean!
  error: String
  comments: [Comment]
}

type Query {
  GetCommentsByPostId(postId: Int!): GetCommentsByPostIdResponse!
  GetAllPosts(limit: Int!): GetAllPostsResponse!
  GetMyPosts: GetMyPostsResponse!
  GetPostsByKeyword(searchType: String, keyword: String!): GetPostsByKeywordResponse!
  GetMyProfile: GetMyProfileResponse!
}

type Comment {
  id: Int!
  body: String!
  userId: Int!
  user: User!
  postId: Int!
  post: Post!
  parentCommentId: Int
  createdAt: String!
  updatedAt: String
}

type Game {
  id: Int!
  title: String!
  category: Category!
  logo: Image
  icon: Image
  createdAt: String!
  updatedAt: String
}

type Image {
  id: Int!
  name: String!
  filename: String!
  createdAt: String!
  updatedAt: String
}

type Message {
  id: Int!
  text: String!
  senderId: Int!
  sender: User!
  receiverId: Int!
  receiver: User!
  createdAt: String!
  updatedAt: String
}

type Notification {
  id: Int!
  sender: User
  receiver: User!
  type: String!
  postOfFollowers: Post
  commentOnMyPost: Comment
  commentOnMyComment: Comment
  createdAt: String!
  updatedAt: String
}

type AddPostResponse {
  ok: Boolean!
  error: String
}

type DeletePostResponse {
  ok: Boolean!
  error: String
}

type EditPostResponse {
  ok: Boolean!
  error: String
}

type GetAllPostsResponse {
  ok: Boolean!
  error: String
  posts: [Post]
}

type GetMyPostsResponse {
  ok: Boolean!
  error: String
  posts: [Post]
}

type GetPostsByKeywordResponse {
  ok: Boolean!
  error: String
  filterdPosts: [Post]
}

type Post {
  id: Int!
  title: String!
  body: String!
  userId: Int!
  user: User!
  claps: [Clap]
  comments: [Comment]
  view: Int!
  createdAt: String!
  updatedAt: String
}

type Product {
  id: Int!
  name: String!
  price: Int!
  game: Game!
  createdAt: String!
  updatedAt: String!
}

type CompleteEmailVerificationResponse {
  ok: Boolean!
  error: String
}

type CompletePhoneVerificationResponse {
  ok: Boolean!
  error: String
  token: String
}

type EmailSignInResponse {
  ok: Boolean!
  error: String
  token: String
}

type EmailSignUpResponse {
  ok: Boolean!
  error: String
  token: String
}

type FacebookConnectResponse {
  ok: Boolean!
  error: String
  token: String
}

type GetMyProfileResponse {
  ok: Boolean!
  error: String
  user: User
}

type RequestEmailVerificationResponse {
  ok: Boolean!
  error: String
}

type User {
  id: Int!
  email: String
  verifiedEmail: Boolean!
  firstName: String!
  lastName: String!
  fullName: String
  age: Int
  gender: String
  password: String
  phoneNumber: String
  verifiedPhoneNumber: Boolean!
  profilePhoto: String
  fbId: String
  messagesAsSender: [Message]
  messagesAsReceiver: [Message]
  certification: Boolean
  exp: Int!
  clapPoint: Int!
  following: [User]
  followers: [User]
  achievements: [Achievement]
  posts: [Post]
  clapsAsSender: [Clap]
  clapsAsReceiver: [Clap]
  comments: [Comment]
  notificationsAsReceiver: [Notification]
  wikiImages: [WikiImage]
  createdAt: String!
  updatedAt: String
}

type StartPhoneVerificationResponse {
  ok: Boolean!
  error: String
}

type UpdateMyProfileResponse {
  ok: Boolean!
  error: String
}

type Verification {
  id: Int!
  target: String!
  payload: String!
  key: String!
  verified: Boolean!
  createdAt: String!
  updatedAt: String
}

type WikiImage {
  id: Int!
  body: String!
  userId: Int!
  user: User!
  createdAt: String!
  updatedAt: String
}
